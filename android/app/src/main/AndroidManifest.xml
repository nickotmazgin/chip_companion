<manifest xmlns:android="http://schemas.android.com/apk/res/android"
          xmlns:tools="http://schemas.android.com/tools">
    <!-- Minimal permissions - only what's absolutely necessary -->
    <!-- NO INTERNET or NETWORK STATE - App is 100% offline -->
    
    <!-- Bluetooth permissions for scanner connectivity -->
    <uses-permission android:name="android.permission.BLUETOOTH" android:maxSdkVersion="30" />
    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN" android:maxSdkVersion="30" />
    <uses-permission android:name="android.permission.BLUETOOTH_CONNECT" />
    <uses-permission android:name="android.permission.BLUETOOTH_SCAN" android:usesPermissionFlags="neverForLocation" />
    
    <!-- Location permission ONLY for BLE discovery on Android 11 and lower; not used for location -->
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" android:maxSdkVersion="30" />
    
    <!-- NFC permissions for chip scanning -->
    <uses-permission android:name="android.permission.NFC" />
    
    <!-- Hardware features - all OPTIONAL to support tablets without these features -->
    <uses-feature android:name="android.hardware.bluetooth" android:required="false" tools:node="replace"/>
    <uses-feature android:name="android.hardware.bluetooth_le" android:required="false" tools:node="replace"/>
    <uses-feature android:name="android.hardware.nfc" android:required="false" tools:node="replace"/>
    <uses-feature android:name="android.hardware.nfc.hce" android:required="false" tools:node="replace"/>
    <!-- Legacy Location features made optional for Android â‰¤ 30 so Play does not
         exclude tablets that lack GPS/network location but can still run the app. -->
    <uses-feature android:name="android.hardware.location" android:required="false" tools:node="replace"/>
    <uses-feature android:name="android.hardware.location.network" android:required="false" tools:node="replace"/>
    <uses-feature android:name="android.hardware.location.gps" android:required="false" tools:node="replace"/>
    
    <application
        android:label="Chip Companion"
        android:name="${applicationName}"
        android:icon="@mipmap/ic_launcher"
        android:networkSecurityConfig="@xml/network_security_config"
        android:usesCleartextTraffic="false"
        android:allowBackup="false"
        android:dataExtractionRules="@xml/data_extraction_rules">
        <activity
            android:name=".MainActivity"
            android:exported="true"
            android:launchMode="singleTop"
            android:taskAffinity=""
            android:theme="@style/LaunchTheme"
            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
            android:hardwareAccelerated="true"
            android:windowSoftInputMode="adjustResize">
            <!-- Specifies an Android theme to apply to this Activity as soon as
                 the Android process has started. This theme is visible to the user
                 while the Flutter UI initializes. After that, this theme continues
                 to determine the Window background behind the Flutter UI. -->
            <meta-data
              android:name="io.flutter.embedding.android.NormalTheme"
              android:resource="@style/NormalTheme"
              />
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
        </activity>
        <!-- Don't delete the meta-data below.
             This is used by the Flutter tool to generate GeneratedPluginRegistrant.java -->
        <meta-data
            android:name="flutterEmbedding"
            android:value="2" />
    </application>
    <!-- Required to query activities that can process text, see:
         https://developer.android.com/training/package-visibility and
         https://developer.android.com/reference/android/content/Intent#ACTION_PROCESS_TEXT.

         In particular, this is used by the Flutter engine in io.flutter.plugin.text.ProcessTextPlugin. -->
    <queries>
        <intent>
            <action android:name="android.intent.action.PROCESS_TEXT"/>
            <data android:mimeType="text/plain"/>
        </intent>
    </queries>
</manifest>
